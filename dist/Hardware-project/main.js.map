{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game-check/game-check.component.css","webpack:///./src/app/game-check/game-check.component.html","webpack:///./src/app/game-check/game-check.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profil/profil.component.css","webpack:///./src/app/profil/profil.component.html","webpack:///./src/app/profil/profil.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/checkLogin.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,gF;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,kBAAkB,CAAC;IAC7B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACN;AACL;AAEA;AACa;AACH;AACF;AACC;AACI;AACD;AACd;AACW;AACX;AAC0B;AAEvE,IAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC9C,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,uEAAU,CAAC,EAAG,SAAS,EAAE,wEAAe,EAAC;IACxE,EAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,uEAAU,CAAC,EAAG,SAAS,EAAE,oFAAkB,EAAC;IAC9E,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;CACtC,CAAC;AAoBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,qEAAc;gBACd,wEAAe;gBACf,oFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,2DAAW;gBACX,sEAAgB;gBAChB,4DAAY;aACb;YACD,SAAS,EAAE,CAAC,oEAAY,EAAE,uEAAU,EAAE,0DAAG,CAAC;YAC1C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzCtB,0BAA0B,yBAAyB,kBAAkB,wBAAwB,oBAAoB,6BAA6B,yBAAyB,GAAG,WAAW,sBAAsB,GAAG,cAAc,kBAAkB,+BAA+B,8BAA8B,0BAA0B,GAAG,kBAAkB,wBAAwB,wBAAwB,uBAAuB,6BAA6B,yBAAyB,mCAAmC,GAAG,YAAY,gBAAgB,eAAe,kBAAkB,6BAA6B,2BAA2B,yBAAyB,GAAG,aAAa,oBAAoB,8BAA8B,0BAA0B,GAAG,C;;;;;;;;;;;ACA1uB,uTAAuT,UAAU,kQAAkQ,YAAY,wFAAwF,+DAA+D,uGAAuG,qBAAqB,gCAAgC,uBAAuB,6BAA6B,sBAAsB,mHAAmH,qBAAqB,gCAAgC,uBAAuB,6BAA6B,sBAAsB,gHAAgH,qBAAqB,gCAAgC,uBAAuB,6BAA6B,sBAAsB,8I;;;;;;;;;;;;;;;;;;;;;;;;;;ACA33C;AACJ;AACW;AASzD;IAWE,4BAAoB,YAA0B,EAAU,GAAQ;QAA5C,iBAAY,GAAZ,YAAY,CAAc;QAAU,QAAG,GAAH,GAAG,CAAK;IAAI,CAAC;IAErE,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,sCAAS,GAAT;QAAA,iBAMC;QALC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;YAC9B,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;YAC/B,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7B,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAgB,GAAhB,UAAiB,GAAW;QAA5B,iBAIC;QAHC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACzC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,GAAW;QAAzB,iBAkBC;QAjBC,IAAI,EAAE,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACnC,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBACtC,KAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBAC1C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,EAAE,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACnC,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBACtC,KAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBAC1C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAQ,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,yCAAY,GAAZ;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,2CAAc,GAAd;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAlEU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAYkC,oEAAY,EAAe,yDAAG;OAXrD,kBAAkB,CAsE9B;IAAD,yBAAC;CAAA;AAtE8B;;;;;;;;;;;;ACX/B,0BAA0B,oCAAoC,yBAAyB,GAAG,QAAQ,yBAAyB,oBAAoB,sBAAsB,GAAG,aAAa,qBAAqB,uBAAuB,+BAA+B,gCAAgC,iCAAiC,iBAAiB,4BAA4B,GAAG,YAAY,uBAAuB,wBAAwB,sBAAsB,eAAe,iBAAiB,KAAK,G;;;;;;;;;;;ACAve,2EAA2E,yBAAyB,4O;;;;;;;;;;;;;;;;;;;;;;;;;ACAlD;AACO;AAQzD;IAEE,yBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,kCAAQ,GAAR;IACA,CAAC;IAED,kCAAQ,GAAR;QACE,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC;YAC9B,OAAO,SAAS,CAAC;SAClB;aAAI;YACH,OAAO,QAAQ,CAAC;SACjB;IACH,CAAC;IAbU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGkC,oEAAY;OAFnC,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;ACT5B,yBAAyB,wBAAwB,oBAAoB,6BAA6B,8BAA8B,0BAA0B,GAAG,WAAW,iBAAiB,wBAAwB,oBAAoB,6BAA6B,yBAAyB,GAAG,YAAY,iBAAiB,oBAAoB,wBAAwB,6BAA6B,yBAAyB,yCAAyC,GAAG,iBAAiB,sCAAsC,sBAAsB,GAAG,C;;;;;;;;;;;ACAzhB,mU;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAChB;AAOzC;IAME,wBAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAH9D,UAAK,GAAU,eAAe,CAAC;QAC/B,WAAM,GAAU,MAAM,CAAC;IAE2C,CAAC;IAE3E,iCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAAE;IAC1D,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;YACpD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC7C,IAAI,KAAI,CAAC,QAAQ,EAAE;gBAAE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAAE;QAC1D,CAAC,CAAC,CAAC;IAEL,CAAC;IAnBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAOkC,oEAAY,EAAkB,sDAAM;OAN3D,cAAc,CAoB1B;IAAD,qBAAC;CAAA;AApB0B;;;;;;;;;;;;ACT3B,2BAA2B,wBAAwB,oBAAoB,+BAA+B,8BAA8B,0BAA0B,GAAG,iBAAiB,yBAAyB,0BAA0B,GAAG,WAAW,yBAAyB,GAAG,kBAAkB,kBAAkB,wBAAwB,oBAAoB,6BAA6B,yBAAyB,GAAG,eAAe,wBAAwB,oBAAoB,8BAA8B,GAAG,sBAAsB,yBAAyB,wBAAwB,8BAA8B,yBAAyB,sBAAsB,GAAG,sBAAsB,yBAAyB,wBAAwB,+BAA+B,yBAAyB,sBAAsB,GAAG,qBAAqB,yBAAyB,wBAAwB,4BAA4B,yBAAyB,sBAAsB,GAAG,WAAW,yBAAyB,iBAAiB,8BAA8B,0BAA0B,yBAAyB,oBAAoB,6BAA6B,gBAAgB,eAAe,+CAA+C,uCAAuC,GAAG,kBAAkB,kBAAkB,wBAAwB,oBAAoB,6BAA6B,yBAAyB,GAAG,kBAAkB,kBAAkB,wBAAwB,oBAAoB,8BAA8B,yBAAyB,GAAG,YAAY,iBAAiB,sBAAsB,iBAAiB,gBAAgB,aAAa,cAAc,kBAAkB,mBAAmB,wCAAwC,GAAG,cAAc,oBAAoB,8BAA8B,0BAA0B,GAAG,C;;;;;;;;;;;ACArxD,wUAAwU,aAAa,+GAA+G,IAAI,uDAAuD,MAAM,oDAAoD,KAAK,4VAA4V,yBAAyB,+OAA+O,QAAQ,yLAAyL,UAAU,kLAAkL,SAAS,sJAAsJ,yBAAyB,8H;;;;;;;;;;;;;;;;;;;;;;;;;;ACArqD;AACO;AACX;AAU9C;IAqBE,yBAAoB,YAA0B,EAAU,GAAQ;QAA5C,iBAAY,GAAZ,YAAY,CAAc;QAAU,QAAG,GAAH,GAAG,CAAK;QAnBxD,UAAK,GAAW,QAAQ,CAAC;IAmBmC,CAAC;IAErE,kCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,wCAAc,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YAC1D,KAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;YAAC,KAAI,CAAC,aAAa,GAAE,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1F,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;YAAC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,SAAS,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACrG,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAAC,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,EAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAChG,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACtC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACxC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACvC,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;YAC/B,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAO,GAAP,UAAQ,IAAY;QAApB,iBAUC;QATC,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,IAAI,KAAK,KAAK;gBAAE,IAAI,CAAC,WAAW,EAAE,CAAC;;gBAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;YAClF,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBAChF,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,sCAAY,GAAZ;QAAA,iBAWC;QAVC,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;YACvB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBAC3H,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBAC9I,KAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IACxB,CAAC;IAED,kCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,gCAAM,GAAN,UAAO,IAAQ,EAAC,EAAS;QAEvB,KAAI,IAAI,CAAC,IAAI,IAAI,EACjB;YACE,IAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;gBAAE,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;SACtC;IACH,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IArGU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAsBkC,oEAAY,EAAe,yDAAG;OArBrD,eAAe,CAuG3B;IAAD,sBAAC;CAAA;AAvG2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZe;AACO;AACH;AAI/C;IACE,aAAoB,IAAgB,EAAU,YAA0B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAG7E,0BAAY,GAAZ;QAAA,iBAeC;QAdC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE;gBAClD,EAAE,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE;aAC9B,CAAC;iBACC,SAAS,CACR,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAmB,GAAnB,UAAoB,EAAS;QAA7B,iBAeC;QAdC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAE;gBAC1D,GAAG,EAAE,EAAE;aACR,CAAC;iBACC,SAAS,CACR,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAAe,GAAf,UAAgB,IAAW;QAA3B,iBAcC;QAbC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAoC,GAAC,IAAI,EAAE,EACxD,CAAC;iBACC,SAAS,CACR,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAO,GAAP,UAAQ,IAAW,EAAC,GAAU,EAAC,IAAW,EAAC,IAAW,EAAC,MAAa,EAAC,KAAY;QAAjF,iBAoBC;QAnBC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,GAAC,IAAI,EAAE;gBACnD,MAAM,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE;gBACjC,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,IAAI;gBACT,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,KAAK;aACf,CAAC;iBACG,SAAS,CACR,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAW,GAAX;QAAA,iBAcC;QAbC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,EAAE,EACzD,CAAC;iBACC,SAAS,CACR,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAW,GAAX,UAAY,IAAW,EAAC,GAAU;QAAlC,iBAgBC;QAfC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,EAAE;gBAC7D,IAAI,EAAE,IAAI;gBACV,GAAG,EAAE,GAAG;aACT,CAAC;iBACG,SAAS,CACR,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IA5GU,GAAG;QADf,gEAAU,EAAE;yCAEe,+DAAU,EAAwB,2DAAY;OAD7D,GAAG,CA8Gf;IAAD,UAAC;CAAA;AA9Ge;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNmF;AAExD;AACI;AAG/C;IAEI,oBAAoB,YAA0B,EAClC,MAAc;QADN,iBAAY,GAAZ,YAAY,CAAc;QAClC,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAAA,CAAC;IAEhC,gCAAW,GAAX,UACI,KAA6B,EAC7B,KAA0B;QAC1B,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAC9B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACxC;IAEL,CAAC;IAdQ,UAAU;QADtB,gEAAU,EAAE;yCAGyB,2DAAY;YAC1B,sDAAM;OAHjB,UAAU,CAetB;IAAD,iBAAC;CAAA;AAfsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACNoB;AACO;AAGlD;IAKI,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,gBAAW,GAAG,KAAK,CAAC;IAGY,CAAC;IAEzC,4BAAK,GAAL,UAAM,IAAY,EAAE,MAAc;QAAlC,iBAoBC;QAnBG,OAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;YACrC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE;gBAChD,KAAK,EAAE,IAAI;gBACX,GAAG,EAAE,MAAM;aACd,CAAC;iBACG,SAAS,CACN,aAAG;gBACC,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;oBACrB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;iBACvB;gBACD,OAAO,EAAE,CAAC;YACd,CAAC,EACD,aAAG;gBACC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,MAAM,EAAE,CAAC;YACb,CAAC,CACJ,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,+BAAQ,GAAR;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,4BAAK,GAAL;QACI,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAxCQ,YAAY;QADxB,gEAAU,EAAE;yCAMiB,+DAAU;OAL3B,YAAY,CA0CxB;IAAD,mBAAC;CAAA;AA1CwB;;;;;;;;;;;;;ACJzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div id=\\\"login\\\">\\n<router-outlet></router-outlet>\\n</div>  \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Hardware-project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { loginService } from './services/login.service';\nimport { ProfilComponent } from './profil/profil.component';\nimport { checkLogin } from './services/checkLogin.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Api } from './services/api.service';\nimport { GameCheckComponent } from './game-check/game-check.component';\n\nconst appRoutes: Routes = [\n  {path: 'connexion', component: LoginComponent},\n  {path: 'profil', canActivate: [checkLogin] , component: ProfilComponent},\n  {path: 'gamecheck', canActivate: [checkLogin] , component: GameCheckComponent},\n  {path: '', component: LoginComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    ProfilComponent,\n    GameCheckComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [loginService, checkLogin, Api],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"select {\\n    text-align: center;\\n    width: auto;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\n#menu {\\n\\ttext-align:center;\\n}\\n\\n#content {\\n\\tdisplay: flex;\\n    flex-direction: vertical;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n#content img {\\n    min-height: 200px;\\n    max-height: 200px;\\n    max-width: 150px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 10px 10px 10px 10px;\\n}\\n\\n.gconf {\\n\\theight: 200;\\n\\twidth: 150;\\n\\tdisplay: flex;\\n    flex-direction: column;\\n\\tborder: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\n#loading{\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\"","module.exports = \"<app-header></app-header>\\n\\n<div *ngIf=\\\"isResolve | async\\\">\\n  <div id=\\\"menu\\\">\\n    <label for=\\\"game\\\">Jeux : </label>\\n    <select [(ngModel)]=\\\"gameSelected\\\" id=\\\"game\\\" (ngModelChange)=\\\"onGameChange()\\\">\\n      <option *ngFor=\\\"let game of gameList\\\" [ngValue]=\\\"game\\\">\\n        {{game.nom}}\\n      </option>\\n    </select>\\n    <label for=\\\"config\\\">Config : </label>\\n    <select [(ngModel)]=\\\"configSelected\\\" id=\\\"config\\\" (ngModelChange)=\\\"onConfigChange()\\\">\\n      <option *ngFor=\\\"let config of configList\\\" [ngValue]=\\\"config\\\">\\n        {{config.nom}}\\n      </option>\\n    </select>\\n  </div>\\n\\n\\n  <div id=\\\"content\\\">\\n    <img src='{{ \\\"assets/images/games/\\\" + this.gameSelected.nom + \\\".jpg\\\" }}'>\\n    <div class=\\\"gconf\\\">\\n      <h3>Configuration recommandée</h3>\\n      <h3>Carte graphique : {{this.configr.cg.nom}}</h3>\\n      <h3>Processeur : {{this.configr.proc.nom}}</h3>\\n      <h3>Mémoire : {{this.configr.mem.nom}}</h3>\\n    </div>\\n    <div class=\\\"gconf\\\">\\n      <h3>Configuration minimale</h3>\\n      <h3>Carte graphique : {{this.configm.cg.nom}}</h3>\\n      <h3>Processeur : {{this.configm.proc.nom}}</h3>\\n      <h3>Mémoire : {{this.configm.mem.nom}}</h3>\\n    </div>\\n    <div class=\\\"gconf\\\">\\n      <h3>Votre configuration</h3>\\n      <h3>Carte graphique : {{this.configu.cg.nom}}</h3>\\n      <h3>Processeur : {{this.configu.proc.nom}}</h3>\\n      <h3>Mémoire : {{this.configu.mem.nom}}</h3>\\n    </div>\\n  </div>\\n</div>\\n\\n<div id=\\\"loading\\\" *ngIf=\\\"!(isResolve | async)\\\">\\n  <img src=\\\"assets/images/loading.gif\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Api } from '../services/api.service';\nimport { loginService } from '../services/login.service';\nimport { promise } from 'protractor';\n\n\n@Component({\n  selector: 'app-game-check',\n  templateUrl: './game-check.component.html',\n  styleUrls: ['./game-check.component.css']\n})\nexport class GameCheckComponent implements OnInit {\n\n  private gameList;\n  private gameSelected;\n  private isResolve: Promise<boolean>;\n  private configList;\n  private configSelected;\n  private configr;\n  private configm;\n  private configu;\n\n  constructor(private loginService: loginService, private api: Api) { }\n\n  ngOnInit() {\n    this.initGames();\n    this.initConf();\n  }\n\n  initGames() {\n    this.api.getGameList().then((res) => {\n      this.gameList = res;\n      this.gameSelected = res[0];\n      this.getGameConfig(this.gameSelected.id);\n    });\n  }\n\n  initConf() {\n    this.api.getListeConf().then((res) => {\n      this.configList = res;\n      this.configSelected = res[0];\n      this.getConfigDevices(this.configSelected.id);\n    });\n  }\n\n  getConfigDevices(idc: number) {\n    this.api.getListeConfDevices(idc).then((res) => {\n      this.configu = res;\n    });\n  }\n\n  getGameConfig(idj: number) {\n    let p1 = new Promise((resolve, reject) => {\n      this.api.getGameConf(\"r\", idj).then((res) => {\n        this.api.getListeConfDevices(res).then((res2) => {\n          this.configr = res2;\n          resolve();\n        });\n      });\n    });\n    let p2 = new Promise((resolve, reject) => {\n      this.api.getGameConf(\"m\", idj).then((res) => {\n        this.api.getListeConfDevices(res).then((res2) => {\n          this.configm = res2;\n          resolve();\n        });\n      });\n    });\n    Promise.all([p1, p2]).then(() => { this.isResolve = Promise.resolve(true); });\n  }\n\n  onGameChange() {\n    this.getGameConfig(this.gameSelected.id);\n  }\n\n  onConfigChange() {\n    this.getConfigDevices(this.configSelected.id);\n  }\n\n\n\n}\n","module.exports = \"header {\\n    border-bottom: 2px solid grey;\\n    text-align: center;\\n}\\n\\nh1 {\\n    text-align: center;\\n    padding: 20px;\\n    font-size: 50px;\\n}\\n\\n.navbar {\\n\\tfont-size : 25px;\\n\\tborder-radius: 4px;\\n\\tborder-top: 2px solid grey;\\n\\tborder-left: 2px solid grey;\\n\\tborder-right: 2px solid grey;\\n\\tcolor: black;\\n    text-decoration: none;\\n}\\n\\n.close {\\n\\tposition: absolute;\\n\\tpadding-right: 15px;\\n\\tpadding-top: 15px;\\n    top: 0px;\\n    right: 0px;\\t\\n}\\n\"","module.exports = \"<header>\\n  <h1>Hardware mania</h1>\\n  <div [ngStyle]=\\\"{'visibility': getState()}\\\">\\n    <a routerLink=\\\"/profil\\\" class=\\\"navbar\\\">Profil</a>\\n    <a routerLink=\\\"/gamecheck\\\" class=\\\"navbar\\\">GameCheck</a>\\n    <a href=\\\"#\\\" class=\\\"navbar\\\">Forum</a>\\n    <a href=\\\"#\\\" class=\\\"close\\\">X</a>\\n  </div>\\n</header>\"","import { Component, OnInit } from '@angular/core';\nimport { loginService } from '../services/login.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private loginService: loginService) { }\n\n  ngOnInit() {\n  }\n\n  getState() {\n    if(this.loginService.getState()){\n      return \"visible\";\n    }else{\n      return \"hidden\";\n    }\n  }\n\n}\n","module.exports = \".login{\\n    margin: 30px 30px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\ninput {\\n    width: 30%;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\nbutton {\\n    width: 15%;\\n    padding: 10px;\\n    margin: 10px 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    background-color: rgb(34, 196, 34);\\n}\\n\\nbutton:hover{\\n    background-color: rgb(4, 49, 4);\\n    cursor: pointer;\\n}\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"login\\\">\\n  <label>E-mail :</label>\\n  <input [(ngModel)]=\\\"email\\\" type=\\\"input\\\"/>\\n  <label>Mot de passe :</label>\\n  <input [(ngModel)]=\\\"passwd\\\" type=\\\"password\\\" id=\\\"password\\\"/>\\n  <button id=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Se connecter</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { loginService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private isLogged: boolean;\n  private email: string =\"user@test.com\";\n  private passwd: string= \"test\";\n\n  constructor(private loginService: loginService, private router: Router) { }\n\n  ngOnInit() {\n    this.isLogged = this.loginService.getState();\n    if (this.isLogged) { this.router.navigate(['profil']); }\n  }\n\n  onSubmit() {\n    this.loginService.logIn(this.email, this.passwd).then(() => {\n      this.isLogged = this.loginService.getState();\n      if (this.isLogged) { this.router.navigate(['profil']); }\n    });\n\n  }\n}\n","module.exports = \".config {\\n    margin: 30px 30px;\\n    display: flex;\\n    flex-direction: vertical;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.config div {\\n    margin-left: 100px;\\n    margin-right: 100px;\\n}\\n\\n.menu {\\n    text-align: center;\\n}\\n\\n.menu select {\\n    width: auto;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\n.boutonbp {\\n    margin: 30px 30px;\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.boutonbp #ajout {\\n    padding: 15px 32px;\\n    margin: 30px 30px;\\n    background-color: green;\\n    border-radius: 4px;\\n    cursor: pointer;\\n}\\n\\n.boutonbp #modif {\\n    padding: 15px 32px;\\n    margin: 30px 30px;\\n    background-color: orange;\\n    border-radius: 4px;\\n    cursor: pointer;\\n}\\n\\n.boutonbp #supp {\\n    padding: 15px 32px;\\n    margin: 30px 30px;\\n    background-color: red;\\n    border-radius: 4px;\\n    cursor: pointer;\\n}\\n\\n.form {\\n    visibility: hidden;\\n    z-index: 2;\\n    background-color: white;\\n    border: solid black;\\n    position: absolute;\\n    display: flex;\\n    flex-direction: column;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%);\\n}\\n\\n.form select {\\n    width: auto;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\n.form button {\\n    width: auto;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid green;\\n    border-radius: 4px;\\n}\\n\\n.focus {\\n    z-index: 1;\\n    position: fixed;\\n    padding: 0;\\n    margin: 0;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background: rgba(49, 41, 41, 0.5);\\n}\\n\\n#loading {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\"","module.exports = \"<app-header></app-header>\\n<div *ngIf=\\\"isResolve | async\\\">\\n  <div class=\\\"menu\\\">\\n    <label for=\\\"conf\\\">Configuration : </label>\\n    <select id=\\\"conf\\\"  [(ngModel)]=\\\"configSelect\\\" (ngModelChange)=\\\"onConfigChange()\\\">\\n      <option *ngFor=\\\"let configs of config\\\" [ngValue]=\\\"configs\\\">\\n        {{configs.nom}}\\n      </option>\\n    </select>\\n  </div>\\n  <div class=\\\"config\\\">\\n    <div>\\n      <h3>Carte graphique : {{cg}}</h3>\\n    </div>\\n    <div>\\n      <h3>Processeur : {{proc}}</h3>\\n    </div>\\n    <div>\\n      <h3>Mémoire : {{mem}}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"boutonbp\\\">\\n    <button id=\\\"ajout\\\" (click)=\\\"onClick('add')\\\">Ajouter</button>\\n    <button id=\\\"modif\\\" (click)=\\\"onClick('modify')\\\">Modifier</button>\\n    <button id=\\\"supp\\\" (click)=\\\"onClick('delete')\\\">Supprimer</button>\\n  </div>\\n\\n  <!--Section masquée-->\\n  <div class=\\\"form\\\" [ngStyle]=\\\"{'visibility': getState()}\\\">\\n      <h3>Nom :</h3>\\n    <input [(ngModel)]=\\\"nomConf\\\" value=\\\"\\\" type=\\\"input\\\"/>\\n    <h3>Carte graphique :</h3>\\n    <select [(ngModel)]=\\\"cgListeSelect\\\">\\n      <option *ngFor=\\\"let cg of cgListe\\\" [ngValue]=\\\"cg\\\">\\n        {{cg.nom}}\\n      </option>\\n    </select>\\n    <h3>Processeur :</h3>\\n    <select [(ngModel)]=\\\"procListeSelect\\\">\\n      <option *ngFor=\\\"let proc of procListe\\\" [ngValue]=\\\"proc\\\">\\n        {{proc.nom}}\\n      </option>\\n    </select>\\n    <h3>Mémoire :</h3>\\n    <select [(ngModel)]=\\\"memListeSelect\\\">\\n      <option *ngFor=\\\"let mem of memListe\\\" [ngValue]=\\\"mem\\\">\\n        {{mem.nom}}\\n      </option>\\n    </select>\\n    <button id=\\\"ajout\\\" (click)=\\\"onSubmitForm()\\\">Valider</button>\\n  </div>\\n  <div class=\\\"focus\\\" [ngStyle]=\\\"{'visibility': getState()}\\\"></div>\\n</div>\\n\\n<div id=\\\"loading\\\" *ngIf=\\\"!(isResolve | async)\\\">\\n  <img src=\\\"assets/images/loading.gif\\\">\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { loginService } from '../services/login.service';\nimport { Api } from '../services/api.service';\nimport { TouchSequence } from 'selenium-webdriver';\nimport { resetApplicationState } from '@angular/core/src/render3/instructions';\nimport { THROW_IF_NOT_FOUND } from '@angular/core/src/di/injector';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\nexport class ProfilComponent implements OnInit {\n\n  private state: string = \"hidden\";\n  private type: string;\n\n  private nomConf: string;\n\n  private isResolve: Promise<boolean>;\n\n  private config;\n  private configSelect;\n  private cgListe;\n  private cgListeSelect;\n  private procListe;\n  private procListeSelect;\n  private memListe;\n  private memListeSelect;\n  private cg: string;\n  private proc: string;\n  private mem: string;\n\n  constructor(private loginService: loginService, private api: Api) { }\n\n  ngOnInit() {\n    this.initConf();\n    this.initList();\n  }\n\n  onConfigChange(): void {\n    this.api.getListeConfDevices(this.configSelect.id).then((res) => {\n      this.cg = res[\"cg\"][\"nom\"]; this.cgListeSelect= this.search(this.cgListe,res[\"cg\"][\"id\"]);\n      this.proc = res[\"proc\"][\"nom\"]; this.procListeSelect = this.search(this.procListe,res[\"proc\"][\"id\"]);\n      this.mem = res[\"mem\"][\"nom\"]; this.memListeSelect = this.search(this.memListe,res[\"mem\"][\"id\"]);\n      this.isResolve = Promise.resolve(true);\n    });\n  }\n\n  initList() {\n    this.api.getListeDevices(\"cg\").then((res) => {\n      this.cgListe = res;\n    });\n\n    this.api.getListeDevices(\"proc\").then((res) => {\n      this.procListe = res;\n    });\n\n    this.api.getListeDevices(\"mem\").then((res) => {\n      this.memListe = res;\n    });\n  }\n\n  initConf() {\n    this.api.getListeConf().then((res) => {\n      this.config = res;\n      this.configSelect = res[0];\n      this.onConfigChange();\n    });\n  }\n\n  onClick(type: string) {\n    if (type != \"delete\") {\n      if (type === \"add\") this.resetSelect(); else this.nomConf = this.configSelect.nom;\n      this.state = \"visible\";\n      this.type = type;\n    } else {\n      this.api.setConf(\"delete\", this.configSelect.id, null, null, null, null).then((res) => {\n        this.initConf();\n      });\n    }\n  }\n\n  onSubmitForm() {\n    if (this.type === \"add\") {\n      this.api.setConf(\"add\", null, this.nomConf, this.cgListeSelect.id, this.procListeSelect.id, this.memListeSelect.id).then((res) => {\n        this.initConf();\n      });\n    } else if (this.type === \"modify\") {\n      this.api.setConf(\"modify\", this.configSelect.id, this.nomConf, this.cgListeSelect.id, this.procListeSelect.id, this.memListeSelect.id).then((res) => {\n        this.onConfigChange();\n      });\n    }\n    this.state = \"hidden\";\n  }\n\n  getState(): string {\n    return this.state;\n  }\n\n  search(list:any,id:number) : any\n  {\n    for(let i in list)\n    {\n      if(list[i].id === id) return list[i];\n    }\n  }\n\n  resetSelect() {\n    this.cgListeSelect = null;\n    this.procListeSelect = null;\n    this.memListeSelect = null;\n    this.nomConf = \"\";\n  }\n\n}\n                ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { loginService } from './login.service';\nimport { maybeQueueResolutionOfComponentResources } from '@angular/core/src/metadata/resource_loading';\n\n@Injectable()\nexport class Api {\n  constructor(private http: HttpClient, private loginService: loginService) { }\n\n\n  getListeConf(): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.post('http://localhost:8080/profil/list', {\n        id: this.loginService.getId()\n      })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n  getListeConfDevices(id:number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.post('http://localhost:8080/profil/list/devices', {\n        idc: id\n      })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n  getListeDevices(type:string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.get('http://localhost:8080/profil/list/'+type, {\n      })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n  setConf(type:string,idc:number,name:string,idcg:number,idproc:number,idmem:number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.post('http://localhost:8080/profil/'+type, {\n        iduser: this.loginService.getId(),\n        idc: idc,\n        nom: name,\n        idcg: idcg,\n        idproc: idproc,\n        idmem: idmem\n    })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n  getGameList(): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.get('http://localhost:8080/gameCheck/getGames', {\n      })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n  getGameConf(marq:string,idj:number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.post('http://localhost:8080/gameCheck/games/conf', {\n      marq: marq,\n      idj: idj  \n    })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n}\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { loginService } from \"./login.service\";\n\n@Injectable()\nexport class checkLogin implements CanActivate {\n\n    constructor(private loginService: loginService,\n        private router: Router) { };\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.loginService.getState()) {\n            return true;\n        } else {\n            this.router.navigate(['/connexion']);\n        }\n\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class loginService {\n\n    private isConnected = false;\n    private id;\n\n    constructor(private http: HttpClient) { }\n\n    logIn(mail: string, passwd: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.http.post('http://localhost:8080/login/check', {\n                email: mail,\n                mdp: passwd\n            })\n                .subscribe(\n                    res => {\n                        if (res[\"res\"] === \"ok\") {\n                            this.isConnected = true;\n                            this.id = res[\"id\"];\n                        }\n                        resolve();\n                    },\n                    err => {\n                        console.log(\"Error occured\");\n                        reject();\n                    }\n                );\n        });\n    }\n\n    logOut(): boolean {\n        this.isConnected = false;\n        return this.getState();\n    }\n\n    getState(): boolean {\n        return this.isConnected;\n    }\n\n    getId(): string {\n        return this.id;\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}