{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/forum/forum.component.css","webpack:///./src/app/forum/forum.component.html","webpack:///./src/app/forum/forum.component.ts","webpack:///./src/app/game-check/game-check.component.css","webpack:///./src/app/game-check/game-check.component.html","webpack:///./src/app/game-check/game-check.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profil/profil.component.css","webpack:///./src/app/profil/profil.component.html","webpack:///./src/app/profil/profil.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/checkLogin.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div id=\\\"login\\\">\\r\\n<router-outlet></router-outlet>\\r\\n</div>  \"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Hardware-project';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { loginService } from './services/login.service';\r\nimport { ProfilComponent } from './profil/profil.component';\r\nimport { checkLogin } from './services/checkLogin.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Api } from './services/api.service';\r\nimport { GameCheckComponent } from './game-check/game-check.component';\r\nimport { ForumComponent } from './forum/forum.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: 'connexion', component: LoginComponent},\r\n  {path: 'profil', canActivate: [checkLogin] , component: ProfilComponent},\r\n  {path: 'gamecheck', canActivate: [checkLogin] , component: GameCheckComponent},\r\n  {path: 'forum', canActivate: [checkLogin] , component: ForumComponent},\r\n  {path: '', component: LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    ProfilComponent,\r\n    GameCheckComponent,\r\n    ForumComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    CommonModule\r\n  ],\r\n  providers: [loginService, checkLogin, Api],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".sujet{\\r\\n\\tborder-top: 4px solid grey;\\r\\n\\tborder-bottom: 4px solid grey;\\r\\n\\tdisplay: flex;\\r\\n    flex-direction: vertical;\\r\\n    margin-top: 30px;\\r\\n}\\r\\n\\r\\n.sujet img{\\r\\n    min-height: 25px;\\r\\n    max-height: 25px;\\r\\n    max-width: 25px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.sujet_score{\\r\\n    text-align: center;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border-right: 2px solid grey;\\r\\n    padding: 10px 10px;\\r\\n}\\r\\n\\r\\n.sujet_content{\\r\\n    padding-left: 30px;\\r\\n\\tdisplay: flex;\\r\\n    flex-direction: column;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.message{\\r\\n\\tborder-top: 4px solid grey;\\r\\n\\tborder-bottom: 4px solid grey;\\r\\n\\tdisplay: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 10px;\\r\\n    margin-left: 50px;\\r\\n}\\r\\n\\r\\n#loading{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\"","module.exports = \"<app-header></app-header>\\n\\n<div *ngIf=\\\"isResolve | async\\\">\\n\\n  <div *ngFor=\\\"let sujet of sujets\\\" class=\\\"sujet\\\" [attr.id]=\\\"sujet.id\\\">\\n    <div class=\\\"sujet_score\\\">\\n      <img (click)=\\\"up(sujet.id)\\\" src=\\\"assets/images/icons/up.png\\\">\\n      {{sujet.score}}\\n      <img (click)=\\\"down(sujet.id)\\\" src=\\\"assets/images/icons/down.png\\\">\\n    </div>\\n    <div (click)=\\\"show(sujet.id)\\\" class=\\\"sujet_content\\\">{{sujet.cont}}</div>\\n  </div>\\n</div>\\n\\n<div id=\\\"loading\\\" *ngIf=\\\"!(isResolve | async)\\\">\\n  <img src=\\\"assets/images/loading.gif\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Api } from '../services/api.service';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.css']\n})\nexport class ForumComponent implements OnInit {\n\n  private sujets;\n  private isResolve: Promise<boolean>;\n\n  constructor(private api: Api) { }\n\n  ngOnInit() {\n    this.initSujets();\n  }\n\n  initSujets() {\n    this.api.getListSujet().then((res) => {\n      this.sujets = res;\n      this.isResolve = Promise.resolve(true);\n    });\n  }\n\n  up(id:number) {\n    this.api.setSujetNote(id,\"u\").then(() => {this.initSujets()});\n  }\n\n  down(id:number) {\n    this.api.setSujetNote(id,\"d\").then(() => {this.initSujets()});\n  }\n\n  show(id:number) {\n    this.api.getSujetMessage(id).then(() => {this.appendMessages(1)});\n  }\n\n  appendMessages(id:number) {\n    console.log(\"append !\");\n    let d:HTMLElement = document.getElementById(String(id));\n    let e:HTMLElement = document.createElement(\"div\");\n    e.setAttribute('class','message');\n    e.appendChild(document.createTextNode(\"TEST\"));\n\n    d.insertAdjacentElement(\"afterend\",e);\n\n\n  }\n\n}\n","module.exports = \"select {\\r\\n    text-align: center;\\r\\n    width: auto;\\r\\n    margin: 10px 10px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n#menu {\\r\\n\\ttext-align:center;\\r\\n}\\r\\n\\r\\n#content {\\r\\n\\tdisplay: flex;\\r\\n    flex-direction: vertical;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n#content img {\\r\\n    min-height: 200px;\\r\\n    max-height: 200px;\\r\\n    max-width: 150px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n    padding: 10px 10px 10px 10px;\\r\\n}\\r\\n\\r\\n.gconf {\\r\\n\\theight: 200;\\r\\n\\twidth: 150;\\r\\n\\tdisplay: flex;\\r\\n    flex-direction: column;\\r\\n\\tborder: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n#loading{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\"","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<div *ngIf=\\\"isResolve | async\\\">\\r\\n  <div id=\\\"menu\\\">\\r\\n    <label for=\\\"game\\\">Jeux : </label>\\r\\n    <select [(ngModel)]=\\\"gameSelected\\\" id=\\\"game\\\" (ngModelChange)=\\\"onGameChange()\\\">\\r\\n      <option *ngFor=\\\"let game of gameList\\\" [ngValue]=\\\"game\\\">\\r\\n        {{game.nom}}\\r\\n      </option>\\r\\n    </select>\\r\\n    <label for=\\\"config\\\">Config : </label>\\r\\n    <select [(ngModel)]=\\\"configSelected\\\" id=\\\"config\\\" (ngModelChange)=\\\"onConfigChange()\\\">\\r\\n      <option *ngFor=\\\"let config of configList\\\" [ngValue]=\\\"config\\\">\\r\\n        {{config.nom}}\\r\\n      </option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div id=\\\"content\\\">\\r\\n    <img src='{{ \\\"assets/images/games/\\\" + this.gameSelected.nom + \\\".jpg\\\" }}'>\\r\\n    <div class=\\\"gconf\\\">\\r\\n      <h3>Configuration recommandée</h3>\\r\\n      <h3>Carte graphique : {{this.configr.cg.nom}}</h3>\\r\\n      <h3>Processeur : {{this.configr.proc.nom}}</h3>\\r\\n      <h3>Mémoire : {{this.configr.mem.nom}}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"gconf\\\">\\r\\n      <h3>Configuration minimale</h3>\\r\\n      <h3>Carte graphique : {{this.configm.cg.nom}}</h3>\\r\\n      <h3>Processeur : {{this.configm.proc.nom}}</h3>\\r\\n      <h3>Mémoire : {{this.configm.mem.nom}}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"gconf\\\">\\r\\n      <h3>Votre configuration</h3>\\r\\n      <h3>Carte graphique : {{this.configu.cg.nom}}</h3>\\r\\n      <h3>Processeur : {{this.configu.proc.nom}}</h3>\\r\\n      <h3>Mémoire : {{this.configu.mem.nom}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"loading\\\" *ngIf=\\\"!(isResolve | async)\\\">\\r\\n  <img src=\\\"assets/images/loading.gif\\\">\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Api } from '../services/api.service';\r\nimport { loginService } from '../services/login.service';\r\nimport { promise } from 'protractor';\r\n\r\n\r\n@Component({\r\n  selector: 'app-game-check',\r\n  templateUrl: './game-check.component.html',\r\n  styleUrls: ['./game-check.component.css']\r\n})\r\nexport class GameCheckComponent implements OnInit {\r\n\r\n  private gameList;\r\n  private gameSelected;\r\n  private isResolve: Promise<boolean>;\r\n  private configList;\r\n  private configSelected;\r\n  private configr;\r\n  private configm;\r\n  private configu;\r\n\r\n  constructor(private loginService: loginService, private api: Api) { }\r\n\r\n  ngOnInit() {\r\n    this.initGames();\r\n    this.initConf();\r\n  }\r\n\r\n  initGames() {\r\n    this.api.getGameList().then((res) => {\r\n      this.gameList = res;\r\n      this.gameSelected = res[0];\r\n      this.getGameConfig(this.gameSelected.id);\r\n    });\r\n  }\r\n\r\n  initConf() {\r\n    this.api.getListeConf().then((res) => {\r\n      this.configList = res;\r\n      this.configSelected = res[0];\r\n      this.getConfigDevices(this.configSelected.id);\r\n    });\r\n  }\r\n\r\n  getConfigDevices(idc: number) {\r\n    this.api.getListeConfDevices(idc).then((res) => {\r\n      this.configu = res;\r\n    });\r\n  }\r\n\r\n  getGameConfig(idj: number) {\r\n    let p1 = new Promise((resolve, reject) => {\r\n      this.api.getGameConf(\"r\", idj).then((res) => {\r\n        this.api.getListeConfDevices(res).then((res2) => {\r\n          this.configr = res2;\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n    let p2 = new Promise((resolve, reject) => {\r\n      this.api.getGameConf(\"m\", idj).then((res) => {\r\n        this.api.getListeConfDevices(res).then((res2) => {\r\n          this.configm = res2;\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n    Promise.all([p1, p2]).then(() => { this.isResolve = Promise.resolve(true); });\r\n  }\r\n\r\n  onGameChange() {\r\n    this.getGameConfig(this.gameSelected.id);\r\n  }\r\n\r\n  onConfigChange() {\r\n    this.getConfigDevices(this.configSelected.id);\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"header {\\r\\n    border-bottom: 2px solid grey;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    text-align: center;\\r\\n    padding: 20px;\\r\\n    font-size: 50px;\\r\\n}\\r\\n\\r\\n.navbar {\\r\\n\\tfont-size : 25px;\\r\\n\\tborder-radius: 4px;\\r\\n\\tborder-top: 2px solid grey;\\r\\n\\tborder-left: 2px solid grey;\\r\\n\\tborder-right: 2px solid grey;\\r\\n\\tcolor: black;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.close {\\r\\n\\tposition: absolute;\\r\\n\\tpadding-right: 15px;\\r\\n\\tpadding-top: 15px;\\r\\n    top: 0px;\\r\\n    right: 0px;\\t\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <h1>Hardware mania</h1>\\r\\n  <div [ngStyle]=\\\"{'visibility': getState()}\\\">\\r\\n    <a routerLink=\\\"/profil\\\" class=\\\"navbar\\\">Profil</a>\\r\\n    <a routerLink=\\\"/gamecheck\\\" class=\\\"navbar\\\">GameCheck</a>\\r\\n    <a routerLink=\\\"/forum\\\" class=\\\"navbar\\\">Forum</a>\\r\\n    <a href=\\\"#\\\" class=\\\"close\\\">X</a>\\r\\n  </div>\\r\\n</header>\"","import { Component, OnInit } from '@angular/core';\r\nimport { loginService } from '../services/login.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private loginService: loginService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getState() {\r\n    if(this.loginService.getState()){\r\n      return \"visible\";\r\n    }else{\r\n      return \"hidden\";\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".login{\\r\\n    margin: 30px 30px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    width: 30%;\\r\\n    margin: 10px 10px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    width: 15%;\\r\\n    padding: 10px;\\r\\n    margin: 10px 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n    background-color: rgb(34, 196, 34);\\r\\n}\\r\\n\\r\\nbutton:hover{\\r\\n    background-color: rgb(4, 49, 4);\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<app-header></app-header>\\r\\n<div class=\\\"login\\\">\\r\\n  <label>E-mail :</label>\\r\\n  <input [(ngModel)]=\\\"email\\\" type=\\\"input\\\"/>\\r\\n  <label>Mot de passe :</label>\\r\\n  <input [(ngModel)]=\\\"passwd\\\" type=\\\"password\\\" id=\\\"password\\\"/>\\r\\n  <button id=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Se connecter</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { loginService } from '../services/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  private isLogged: boolean;\r\n  private email: string =\"user@test.com\";\r\n  private passwd: string= \"test\";\r\n\r\n  constructor(private loginService: loginService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.isLogged = this.loginService.getState();\r\n    if (this.isLogged) { this.router.navigate(['profil']); }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loginService.logIn(this.email, this.passwd).then(() => {\r\n      this.isLogged = this.loginService.getState();\r\n      if (this.isLogged) { this.router.navigate(['profil']); }\r\n    });\r\n\r\n  }\r\n}\r\n","module.exports = \".config {\\r\\n    margin: 30px 30px;\\r\\n    display: flex;\\r\\n    flex-direction: vertical;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.config div {\\r\\n    margin-left: 100px;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.menu select {\\r\\n    width: auto;\\r\\n    margin: 10px 10px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.boutonbp {\\r\\n    margin: 30px 30px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.boutonbp #ajout {\\r\\n    padding: 15px 32px;\\r\\n    margin: 30px 30px;\\r\\n    background-color: green;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.boutonbp #modif {\\r\\n    padding: 15px 32px;\\r\\n    margin: 30px 30px;\\r\\n    background-color: orange;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.boutonbp #supp {\\r\\n    padding: 15px 32px;\\r\\n    margin: 30px 30px;\\r\\n    background-color: red;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    visibility: hidden;\\r\\n    z-index: 2;\\r\\n    background-color: white;\\r\\n    border: solid black;\\r\\n    position: absolute;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n.form select {\\r\\n    width: auto;\\r\\n    margin: 10px 10px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n    width: auto;\\r\\n    margin: 10px 10px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid green;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.focus {\\r\\n    z-index: 1;\\r\\n    position: fixed;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background: rgba(49, 41, 41, 0.5);\\r\\n}\\r\\n\\r\\n#loading {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\"","module.exports = \"<app-header></app-header>\\r\\n<div *ngIf=\\\"isResolve | async\\\">\\r\\n  <div class=\\\"menu\\\">\\r\\n    <label for=\\\"conf\\\">Configuration : </label>\\r\\n    <select id=\\\"conf\\\"  [(ngModel)]=\\\"configSelect\\\" (ngModelChange)=\\\"onConfigChange()\\\">\\r\\n      <option *ngFor=\\\"let configs of config\\\" [ngValue]=\\\"configs\\\">\\r\\n        {{configs.nom}}\\r\\n      </option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"config\\\">\\r\\n    <div>\\r\\n      <h3>Carte graphique : {{cg}}</h3>\\r\\n    </div>\\r\\n    <div>\\r\\n      <h3>Processeur : {{proc}}</h3>\\r\\n    </div>\\r\\n    <div>\\r\\n      <h3>Mémoire : {{mem}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"boutonbp\\\">\\r\\n    <button id=\\\"ajout\\\" (click)=\\\"onClick('add')\\\">Ajouter</button>\\r\\n    <button id=\\\"modif\\\" (click)=\\\"onClick('modify')\\\">Modifier</button>\\r\\n    <button id=\\\"supp\\\" (click)=\\\"onClick('delete')\\\">Supprimer</button>\\r\\n  </div>\\r\\n\\r\\n  <!--Section masquée-->\\r\\n  <div class=\\\"form\\\" [ngStyle]=\\\"{'visibility': getState()}\\\">\\r\\n      <h3>Nom :</h3>\\r\\n    <input [(ngModel)]=\\\"nomConf\\\" value=\\\"\\\" type=\\\"input\\\"/>\\r\\n    <h3>Carte graphique :</h3>\\r\\n    <select [(ngModel)]=\\\"cgListeSelect\\\">\\r\\n      <option *ngFor=\\\"let cg of cgListe\\\" [ngValue]=\\\"cg\\\">\\r\\n        {{cg.nom}}\\r\\n      </option>\\r\\n    </select>\\r\\n    <h3>Processeur :</h3>\\r\\n    <select [(ngModel)]=\\\"procListeSelect\\\">\\r\\n      <option *ngFor=\\\"let proc of procListe\\\" [ngValue]=\\\"proc\\\">\\r\\n        {{proc.nom}}\\r\\n      </option>\\r\\n    </select>\\r\\n    <h3>Mémoire :</h3>\\r\\n    <select [(ngModel)]=\\\"memListeSelect\\\">\\r\\n      <option *ngFor=\\\"let mem of memListe\\\" [ngValue]=\\\"mem\\\">\\r\\n        {{mem.nom}}\\r\\n      </option>\\r\\n    </select>\\r\\n    <button id=\\\"ajout\\\" (click)=\\\"onSubmitForm()\\\">Valider</button>\\r\\n  </div>\\r\\n  <div class=\\\"focus\\\" [ngStyle]=\\\"{'visibility': getState()}\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"loading\\\" *ngIf=\\\"!(isResolve | async)\\\">\\r\\n  <img src=\\\"assets/images/loading.gif\\\">\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { loginService } from '../services/login.service';\r\nimport { Api } from '../services/api.service';\r\nimport { TouchSequence } from 'selenium-webdriver';\r\nimport { resetApplicationState } from '@angular/core/src/render3/instructions';\r\nimport { THROW_IF_NOT_FOUND } from '@angular/core/src/di/injector';\r\n\r\n@Component({\r\n  selector: 'app-profil',\r\n  templateUrl: './profil.component.html',\r\n  styleUrls: ['./profil.component.css']\r\n})\r\nexport class ProfilComponent implements OnInit {\r\n\r\n  private state: string = \"hidden\";\r\n  private type: string;\r\n\r\n  private nomConf: string;\r\n\r\n  private isResolve: Promise<boolean>;\r\n\r\n  private config;\r\n  private configSelect;\r\n  private cgListe;\r\n  private cgListeSelect;\r\n  private procListe;\r\n  private procListeSelect;\r\n  private memListe;\r\n  private memListeSelect;\r\n  private cg: string;\r\n  private proc: string;\r\n  private mem: string;\r\n\r\n  constructor(private loginService: loginService, private api: Api) { }\r\n\r\n  ngOnInit() {\r\n    this.initConf();\r\n    this.initList();\r\n  }\r\n\r\n  onConfigChange(): void {\r\n    this.api.getListeConfDevices(this.configSelect.id).then((res) => {\r\n      this.cg = res[\"cg\"][\"nom\"]; this.cgListeSelect= this.search(this.cgListe,res[\"cg\"][\"id\"]);\r\n      this.proc = res[\"proc\"][\"nom\"]; this.procListeSelect = this.search(this.procListe,res[\"proc\"][\"id\"]);\r\n      this.mem = res[\"mem\"][\"nom\"]; this.memListeSelect = this.search(this.memListe,res[\"mem\"][\"id\"]);\r\n      this.isResolve = Promise.resolve(true);\r\n    });\r\n  }\r\n\r\n  initList() {\r\n    this.api.getListeDevices(\"cg\").then((res) => {\r\n      this.cgListe = res;\r\n    });\r\n\r\n    this.api.getListeDevices(\"proc\").then((res) => {\r\n      this.procListe = res;\r\n    });\r\n\r\n    this.api.getListeDevices(\"mem\").then((res) => {\r\n      this.memListe = res;\r\n    });\r\n  }\r\n\r\n  initConf() {\r\n    this.api.getListeConf().then((res) => {\r\n      this.config = res;\r\n      this.configSelect = res[0];\r\n      this.onConfigChange();\r\n    });\r\n  }\r\n\r\n  onClick(type: string) {\r\n    if (type != \"delete\") {\r\n      if (type === \"add\") this.resetSelect(); else this.nomConf = this.configSelect.nom;\r\n      this.state = \"visible\";\r\n      this.type = type;\r\n    } else {\r\n      this.api.setConf(\"delete\", this.configSelect.id, null, null, null, null).then((res) => {\r\n        this.initConf();\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmitForm() {\r\n    if (this.type === \"add\") {\r\n      this.api.setConf(\"add\", null, this.nomConf, this.cgListeSelect.id, this.procListeSelect.id, this.memListeSelect.id).then((res) => {\r\n        this.initConf();\r\n      });\r\n    } else if (this.type === \"modify\") {\r\n      this.api.setConf(\"modify\", this.configSelect.id, this.nomConf, this.cgListeSelect.id, this.procListeSelect.id, this.memListeSelect.id).then((res) => {\r\n        this.onConfigChange();\r\n      });\r\n    }\r\n    this.state = \"hidden\";\r\n  }\r\n\r\n  getState(): string {\r\n    return this.state;\r\n  }\r\n\r\n  search(list:any,id:number) : any\r\n  {\r\n    for(let i in list)\r\n    {\r\n      if(list[i].id === id) return list[i];\r\n    }\r\n  }\r\n\r\n  resetSelect() {\r\n    this.cgListeSelect = null;\r\n    this.procListeSelect = null;\r\n    this.memListeSelect = null;\r\n    this.nomConf = \"\";\r\n  }\r\n\r\n}\r\n                ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { loginService } from './login.service';\r\nimport { maybeQueueResolutionOfComponentResources } from '@angular/core/src/metadata/resource_loading';\r\n\r\n@Injectable()\r\nexport class Api {\r\n  constructor(private http: HttpClient, private loginService: loginService) { }\r\n\r\n\r\n  getListeConf(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.post('http://localhost:8080/profil/list', {\r\n        id: this.loginService.getId()\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  getListeConfDevices(id:number): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.post('http://localhost:8080/profil/list/devices', {\r\n        idc: id\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  getListeDevices(type:string): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.get('http://localhost:8080/profil/list/'+type, {\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  setConf(type:string,idc:number,name:string,idcg:number,idproc:number,idmem:number): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.post('http://localhost:8080/profil/'+type, {\r\n        iduser: this.loginService.getId(),\r\n        idc: idc,\r\n        nom: name,\r\n        idcg: idcg,\r\n        idproc: idproc,\r\n        idmem: idmem\r\n    })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  getGameList(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.get('http://localhost:8080/gameCheck/getGames', {\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  getGameConf(marq:string,idj:number): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.post('http://localhost:8080/gameCheck/games/conf', {\r\n      marq: marq,\r\n      idj: idj  \r\n    })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n\r\n  getListSujet(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.get('http://localhost:8080/forum/sujet', {\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  setSujetNote(id:number,type:string): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.post('http://localhost:8080/forum/sujet/note', {\r\n        id: id,\r\n        updw : type\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n\r\n  getSujetMessage(id:number): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.http.post('http://localhost:8080/forum/sujet/message', {\r\n        id: id\r\n      })\r\n        .subscribe(\r\n          res => {\r\n            resolve(res);\r\n          },\r\n          err => {\r\n            console.log(\"Error occured\");\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n}\r\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { loginService } from \"./login.service\";\r\n\r\n@Injectable()\r\nexport class checkLogin implements CanActivate {\r\n\r\n    constructor(private loginService: loginService,\r\n        private router: Router) { };\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (this.loginService.getState()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/connexion']);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class loginService {\r\n\r\n    private isConnected = false;\r\n    private id;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    logIn(mail: string, passwd: string): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.http.post('http://localhost:8080/login/check', {\r\n                email: mail,\r\n                mdp: passwd\r\n            })\r\n                .subscribe(\r\n                    res => {\r\n                        if (res[\"res\"] === \"ok\") {\r\n                            this.isConnected = true;\r\n                            this.id = res[\"id\"];\r\n                        }\r\n                        resolve();\r\n                    },\r\n                    err => {\r\n                        console.log(\"Error occured\");\r\n                        reject();\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    logOut(): boolean {\r\n        this.isConnected = false;\r\n        return this.getState();\r\n    }\r\n\r\n    getState(): boolean {\r\n        return this.isConnected;\r\n    }\r\n\r\n    getId(): string {\r\n        return this.id;\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}