{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profil/profil.component.css","webpack:///./src/app/profil/profil.component.html","webpack:///./src/app/profil/profil.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/checkLogin.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div id=\\\"login\\\">\\n<router-outlet></router-outlet>\\n</div>  \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Hardware-project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { loginService } from './services/login.service';\nimport { ProfilComponent } from './profil/profil.component';\nimport { checkLogin } from './services/checkLogin.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Api } from './services/api.service';\n\nconst appRoutes: Routes = [\n  {path: 'connexion', component: LoginComponent},\n  {path: 'profil', canActivate: [checkLogin] , component: ProfilComponent},\n  {path: '', component: LoginComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    FooterComponent,\n    ProfilComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [loginService, checkLogin, Api],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"footer{\\n    border-top: 2px solid grey;\\n}\"","module.exports = \"<footer>\\n  Pied de page !\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"header{\\n    text-align: center;\\n    padding: 20px;\\n    font-size: 50px;\\n    border-bottom: 2px solid grey;\\n}\"","module.exports = \"<header>\\n  Hardware mania\\n</header>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login{\\n    margin: 30px 30px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\ninput {\\n    width: 30%;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\nbutton {\\n    width: 15%;\\n    padding: 10px;\\n    margin: 10px 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    background-color: rgb(34, 196, 34);\\n}\\n\\nbutton:hover{\\n    background-color: rgb(4, 49, 4);\\n    cursor: pointer;\\n}\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"login\\\">\\n  <label>E-mail :</label>\\n  <input [(ngModel)]=\\\"email\\\" type=\\\"input\\\"/>\\n  <label>Mot de passe :</label>\\n  <input [(ngModel)]=\\\"passwd\\\" type=\\\"password\\\" id=\\\"password\\\"/>\\n  <button id=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Se connecter</button>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { loginService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private isLogged: boolean;\n  private email: string;\n  private passwd: string;\n\n  constructor(private loginService: loginService, private router: Router) { }\n\n  ngOnInit() {\n    this.isLogged = this.loginService.getState();\n    if (this.isLogged) { this.router.navigate(['profil']); }\n  }\n\n  onSubmit() {\n    this.loginService.logIn(this.email, this.passwd).then(() => {\n      this.isLogged = this.loginService.getState();\n      if (this.isLogged) { this.router.navigate(['profil']); }\n    });\n\n  }\n}\n","module.exports = \".config {\\n    margin: 30px 30px;\\n    display: flex;\\n    flex-direction: vertical;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.config div {\\n    margin-left: 100px;\\n    margin-right: 100px;\\n}\\n\\n.menu {\\n    text-align: center;\\n}\\n\\n.boutonbp {\\n    margin: 30px 30px;\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.boutonbp #ajout {\\n    margin: 30px 30px;\\n    background-color: green;\\n    border-radius: 4px;\\n}\\n\\n.boutonbp #modif {\\n    margin: 30px 30px;\\n    background-color: orange;\\n    border-radius: 4px;\\n}\\n\\n.boutonbp #supp {\\n    margin: 30px 30px;\\n    background-color: red;\\n    border-radius: 4px;\\n}\\n\\n.form {\\n    visibility: hidden;\\n    z-index: 2;\\n    background-color: white;\\n    border: solid black;\\n    position: absolute;\\n    display: flex;\\n    flex-direction: column;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%);\\n}\\n\\n.form select {\\n    width: auto;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\\n\\n.form button {\\n    width: auto;\\n    margin: 10px 10px;\\n    padding: 10px;\\n    border: 1px solid green;\\n    border-radius: 4px;\\n}\\n\\n.focus {\\n    visibility: hidden;\\n    z-index: 1;\\n    position: fixed;\\n    padding: 0;\\n    margin: 0;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background: rgba(49, 41, 41, 0.5);\\n}\"","module.exports = \"<app-header></app-header>\\n<div>\\n  <div class=\\\"menu\\\">\\n    <!--  <select [(ngModel)]=\\\"config\\\">-->\\n    <select [(ngModel)]=\\\"configSelect\\\" (ngModelChange)=\\\"onConfigChange($event)\\\">\\n      <option *ngFor=\\\"let configs of config\\\" [value]=\\\"configs.id\\\" [attr.selected]=\\\"configs.nom==configs.Text ? true : null\\\">\\n        {{configs.nom}}\\n      </option>\\n    </select>\\n  </div>\\n  <div class=\\\"config\\\">\\n    <div>\\n      <h3>Carte graphique : {{cg}}</h3>\\n    </div>\\n    <div>\\n      <h3>Processeur : {{proc}}</h3>\\n    </div>\\n    <div>\\n      <h3>Mémoire : {{mem}}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"boutonbp\\\">\\n    <button id=\\\"ajout\\\" (click)=\\\"onConfigChange($event)\\\">Ajouter</button>\\n    <button id=\\\"modif\\\" (click)=\\\"onConfigChange($event)\\\">Modifier</button>\\n    <button id=\\\"supp\\\" (click)=\\\"onConfigChange($event)\\\">Supprimer</button>\\n  </div>\\n  <div class=\\\"form\\\">\\n    <select></select>\\n    <select></select>\\n    <select></select>\\n    <button id=\\\"ajout\\\">Valider</button>\\n  </div>\\n  <div class=\\\"focus\\\"></div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { loginService } from '../services/login.service';\nimport { Api } from '../services/api.service';\nimport { TouchSequence } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\nexport class ProfilComponent implements OnInit {\n\n  private config;\n  private configSelect: number;\n  private cg: string;\n  private proc: string;\n  private mem: string;\n\n  constructor(private loginService: loginService, private api: Api) { }\n\n  ngOnInit() {\n    this.api.getListeConf().then((res) => {\n      this.config = res;\n      this.configSelect = res[0][\"id\"];\n      this.onConfigChange(this.configSelect);\n    })\n  }\n\n  onConfigChange(value: number): void {\n    this.configSelect = value;\n    this.api.getListeConfDevices(value).then((res) => {\n      this.cg = res[\"cg\"][\"nom\"];\n      this.proc = res[\"proc\"][\"nom\"];\n      this.mem = res[\"mem\"][\"nom\"];\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { loginService } from './login.service';\n\n@Injectable()\nexport class Api {\n  constructor(private http: HttpClient, private loginService: loginService) { }\n\n\n  getListeConf(): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.post('http://localhost:8080/profil/list', {\n        id: this.loginService.getId()\n      })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n  getListeConfDevices(id:number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.post('http://localhost:8080/profil/list/devices', {\n        idc: id\n      })\n        .subscribe(\n          res => {\n            resolve(res);\n          },\n          err => {\n            console.log(\"Error occured\");\n            reject();\n          }\n        );\n    });\n  }\n\n}\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { loginService } from \"./login.service\";\n\n@Injectable()\nexport class checkLogin implements CanActivate {\n\n    constructor(private loginService: loginService,\n        private router: Router) { };\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.loginService.getState()) {\n            return true;\n        } else {\n            this.router.navigate(['/connexion']);\n        }\n\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class loginService {\n\n    private isConnected = false;\n    private id;\n\n    constructor(private http: HttpClient) { }\n\n    logIn(mail: string, passwd: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.http.post('http://localhost:8080/login/check', {\n                email: mail,\n                mdp: passwd\n            })\n                .subscribe(\n                    res => {\n                        if (res[\"res\"] === \"ok\") {\n                            this.isConnected = true;\n                            this.id = res[\"id\"];\n                        }\n                        resolve();\n                    },\n                    err => {\n                        console.log(\"Error occured\");\n                        reject();\n                    }\n                );\n        });\n    }\n\n    logOut(): boolean {\n        this.isConnected = false;\n        return this.getState();\n    }\n\n    getState(): boolean {\n        return this.isConnected;\n    }\n\n    getId(): string {\n        return this.id;\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}